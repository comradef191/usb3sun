#include <cstdint>

#define USBK_RESERVED 0
#define USBK_ERROR_ROLLOVER 1
#define USBK_FIRST_KEYCODE 4
#define USBK_NUMLOCK 0x53
#define USBK_RIGHT 0x4F
#define USBK_LEFT 0x50
#define USBK_DOWN 0x51
#define USBK_UP 0x52
#define USBK_RETURN 0x28
#define USBK_ENTER 0x58
#define SUNK_RESET 0x01
#define SUNK_BELL_ON 0x02
#define SUNK_BELL_OFF 0x03
#define SUNK_CLICK_ON 0x0A
#define SUNK_CLICK_OFF 0x0B
#define SUNK_LED 0x0E
#define SUNK_LAYOUT 0x0F
#define SUNK_IDLE 0x7F
#define SUNK_LAYOUT_RESPONSE 0xFE
#define SUNK_RESET_RESPONSE 0xFF
#define SUNK_NUMLOCK 0x62
#define SUNK_CAPSLOCK 0x77
#define SUNK_SCROLLLOCK 0x17

struct SimpleBinding {
  uint8_t usbk;
  uint8_t sunkMake;
  uint8_t sunkBreak;
};

const SimpleBinding SIMPLE_BINDINGS[] = {
  {58, 0x05, 0x85}, // 1. F1
  {59, 0x06, 0x86}, // 2. F2
  {60, 0x08, 0x88}, // 3. F3
  {61, 0x0A, 0x8A}, // 4. F4
  {62, 0x0C, 0x8C}, // 5. F5
  {63, 0x0E, 0x8E}, // 6. F6
  {64, 0x10, 0x90}, // 7. F7
  {65, 0x11, 0x91}, // 8. F8
  {66, 0x12, 0x92}, // 9. F9
  {67, 0x07, 0x87}, // 10. F10
  {68, 0x09, 0x89}, // 11. F11
  {69, 0x0B, 0x8B}, // 12. F12
  {50, 0x58, 0xD8}, // 13. \	|
  {76, 0x42, 0xC2}, // 14. Delete
  {83, 0x62, 0xE2}, // 20. Num Lock
  {41, 0x1D, 0x9D}, // 23. Esc
  {30, 0x1E, 0x9E}, // 24. 1	!
  {31, 0x1F, 0x9F}, // 25. 2	@
  {32, 0x20, 0xA0}, // 26. 3	#
  {33, 0x21, 0xA1}, // 27. 4	$
  {34, 0x22, 0xA2}, // 28. 5	%
  {35, 0x23, 0xA3}, // 29. 6	^
  {36, 0x24, 0xA4}, // 30. 7	&
  {37, 0x25, 0xA5}, // 31. 8	*
  {38, 0x26, 0xA6}, // 32. 9	(
  {39, 0x27, 0xA7}, // 33. 0	)
  {45, 0x28, 0xA8}, // 34. -	_
  {46, 0x29, 0xA9}, // 35. =	+
  {42, 0x2B, 0xAB}, // 36. Backspace
  {84, 0x2E, 0xAE}, // 38. /
  {85, 0x2F, 0xAF}, // 39. *
  {86, 0x47, 0xC7}, // 40. -
  {43, 0x35, 0xB5}, // 43. Tab
  {20, 0x36, 0xB6}, // 44. Q
  {26, 0x37, 0xB7}, // 45. W
  {8, 0x38, 0xB8}, // 46. E
  {21, 0x39, 0xB9}, // 47. R
  {23, 0x3A, 0xBA}, // 48. T
  {28, 0x3B, 0xBB}, // 49. Y
  {24, 0x3C, 0xBC}, // 50. U
  {12, 0x3D, 0xBD}, // 51. I
  {18, 0x3E, 0xBE}, // 52. O
  {19, 0x3F, 0xEF}, // 53. P
  {47, 0x40, 0xC0}, // 54. [	{
  {48, 0x41, 0xC1}, // 55. ]	}
  {40, 0x59, 0xD9}, // 56. Return
  {95, 0x44, 0xC4}, // 57. Home	7
  {96, 0x45, 0xC5}, // 58. (up cur)	8
  {97, 0x46, 0xC6}, // 59. PgUp	9
  {87, 0x7D, 0xFD}, // 60. +
  {4, 0x4D, 0xCD}, // 64. A
  {22, 0x4E, 0xCE}, // 65. S
  {7, 0x4F, 0xCF}, // 66. D
  {9, 0x50, 0xD0}, // 67. F
  {10, 0x51, 0xD1}, // 68. G
  {11, 0x52, 0xD2}, // 69. H
  {13, 0x53, 0xD3}, // 70. J
  {14, 0x54, 0xD4}, // 71. K
  {15, 0x55, 0xD5}, // 72. L
  {51, 0x56, 0xD6}, // 73. ;	:
  {52, 0x57, 0xD7}, // 74. '	"
  {53, 0x2A, 0xAA}, // 75. `	~
  {92, 0x5B, 0xDB}, // 76. (Left Cur)	4
  {93, 0x5C, 0xDC}, // 77. 5
  {94, 0x5D, 0xDD}, // 78. (Right Cur)	6
  {29, 0x64, 0xE4}, // 82. Z
  {27, 0x65, 0xE5}, // 83. X
  {6, 0x66, 0xE6}, // 84. C
  {25, 0x67, 0xE7}, // 85. V
  {5, 0x68, 0xE8}, // 86. B
  {17, 0x69, 0xE9}, // 87. N
  {16, 0x6A, 0xEA}, // 88. M
  {54, 0x6B, 0xEB}, // 89. ,	<
  {55, 0x6C, 0xEC}, // 90. .	>
  {56, 0x6D, 0xED}, // 91. /	?
  {89, 0x70, 0xF0}, // 94. End	1
  {90, 0x71, 0xF1}, // 95. (Dn Cur)	2
  {91, 0x72, 0xF2}, // 96. PgDn	3
  {88, 0x5A, 0xDA}, // 97. Enter
  {57, 0x77, 0xF7}, // 99. Caps Lock
  {98, 0x5E, 0xDE}, // 106. Ins	0
  {99, 0x32, 0xB2}, // 107. Del	.
};
